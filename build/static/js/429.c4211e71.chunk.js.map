{"version":3,"file":"static/js/429.c4211e71.chunk.js","mappings":"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","sources":["features/user/components/UserProfile.js","pages/UserProfilePage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUserInfo, updateUserAsync } from \"../userSlice\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function UserProfile() {\n  const dispatch = useDispatch();\n  const userInfo = useSelector(selectUserInfo);\n  const [selectedEditIndex, setSelectedEditIndex] = useState(-1);\n  const [showAddAddressForm, setShowAddAddressForm] = useState(false);\n\n  //TODO: We will add payment section when we work on backend.\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    formState: { errors },\n  } = useForm();\n\n  const handleEdit = (addressUpdate, index) => {\n    const newUser = { ...userInfo, addresses: [...userInfo.addresses] }; // for shallow copy issue\n    newUser.addresses.splice(index, 1, addressUpdate);\n    dispatch(updateUserAsync(newUser));\n    setSelectedEditIndex(-1);\n  };\n\n  const handleRemove = (e, index) => {\n    const newUser = { ...userInfo, addresses: [...userInfo.addresses] }; // for shallow copy issue\n    newUser.addresses.splice(index, 1);\n    dispatch(updateUserAsync(newUser));\n  };\n\n  const handleEditForm = (index) => {\n    setSelectedEditIndex(index);\n    const address = userInfo.addresses[index];\n    setValue(\"name\", address.name);\n    setValue(\"email\", address.email);\n    setValue(\"city\", address.city);\n    setValue(\"state\", address.state);\n    setValue(\"pinCode\", address.pinCode);\n    setValue(\"phone\", address.phone);\n    setValue(\"street\", address.street);\n  };\n\n  const handleAdd = (address) => {\n    const newUser = {\n      ...userInfo,\n      addresses: [...userInfo.addresses, address],\n    };\n    dispatch(updateUserAsync(newUser));\n    setShowAddAddressForm(false);\n  };\n  const handleCancel = () => {\n    setShowAddAddressForm(false); // Hide the add address form\n    setSelectedEditIndex(-1); // Reset the selected edit index if needed\n    reset(); // Reset the form fields if necessary\n  };\n\n  return (\n    <div>\n      <div className=\"mx-auto mt-12 bg-white max-w-7xl px-4 sm:px-6 lg:px-8\">\n        <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6\">\n          <h1 className=\"text-4xl my-5 font-bold tracking-tight text-gray-900\">\n            Name: {userInfo.name ? userInfo.name : \"New User\"}\n          </h1>\n          <h3 className=\"text-xl my-5 font-bold tracking-tight text-red-900\">\n            email address : {userInfo.email}\n          </h3>\n          {userInfo.role === \"admin\" && (\n            <h3 className=\"text-xl my-5 font-bold tracking-tight text-red-900\">\n              role : {userInfo.role}\n            </h3>\n          )}\n        </div>\n\n        <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6\">\n          <button\n            onClick={(e) => {\n              setShowAddAddressForm(true);\n              setSelectedEditIndex(-1);\n            }}\n            type=\"submit\"\n            className=\"rounded-md my-5 bg-green-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-800\"\n          >\n            Add New Address\n          </button>\n          {showAddAddressForm ? (\n            <form\n              className=\"bg-white px-5 py-12 mt-12\"\n              noValidate\n              onSubmit={handleSubmit((data) => {\n                handleAdd(data);\n                reset();\n              })}\n            >\n              <div className=\"space-y-12\">\n                <div className=\"border-b border-gray-900/10 pb-12\">\n                  <h2 className=\"text-2xl font-semibold leading-7 text-gray-900\">\n                    Personal Information\n                  </h2>\n                  <p className=\"mt-1 text-sm leading-6 text-gray-600\">\n                    Use a permanent address where you can receive mail.\n                  </p>\n\n                  <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\n                    <div className=\"sm:col-span-4\">\n                      <label\n                        htmlFor=\"name\"\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\n                      >\n                        Full name\n                      </label>\n                      <div className=\"mt-2\">\n                        <input\n                          type=\"text\"\n                          {...register(\"name\", {\n                            required: \"name is required\",\n                          })}\n                          id=\"name\"\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                        />\n                        {errors.name && (\n                          <p className=\"text-red-500\">{errors.name.message}</p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"sm:col-span-4\">\n                      <label\n                        htmlFor=\"email\"\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\n                      >\n                        Email address\n                      </label>\n                      <div className=\"mt-2\">\n                        <input\n                          id=\"email\"\n                          {...register(\"email\", {\n                            required: \"email is required\",\n                          })}\n                          type=\"email\"\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                        />\n                        {errors.email && (\n                          <p className=\"text-red-500\">{errors.email.message}</p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"sm:col-span-3\">\n                      <label\n                        htmlFor=\"phone\"\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\n                      >\n                        Phone\n                      </label>\n                      <div className=\"mt-2\">\n                        <input\n                          id=\"phone\"\n                          {...register(\"phone\", {\n                            required: \"phone is required\",\n                          })}\n                          type=\"tel\"\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                        />\n                        {errors.phone && (\n                          <p className=\"text-red-500\">{errors.phone.message}</p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"col-span-full\">\n                      <label\n                        htmlFor=\"street-address\"\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\n                      >\n                        Street address\n                      </label>\n                      <div className=\"mt-2\">\n                        <input\n                          type=\"text\"\n                          {...register(\"street\", {\n                            required: \"street is required\",\n                          })}\n                          id=\"street\"\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                        />\n                        {errors.street && (\n                          <p className=\"text-red-500\">\n                            {errors.street.message}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"sm:col-span-2 sm:col-start-1\">\n                      <label\n                        htmlFor=\"city\"\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\n                      >\n                        City\n                      </label>\n                      <div className=\"mt-2\">\n                        <input\n                          type=\"text\"\n                          {...register(\"city\", {\n                            required: \"city is required\",\n                          })}\n                          id=\"city\"\n                          autoComplete=\"address-level2\"\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                        />\n                        {errors.city && (\n                          <p className=\"text-red-500\">{errors.city.message}</p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"sm:col-span-2\">\n                      <label\n                        htmlFor=\"state\"\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\n                      >\n                        State / Province\n                      </label>\n                      <div className=\"mt-2\">\n                        <input\n                          type=\"text\"\n                          {...register(\"state\", {\n                            required: \"state is required\",\n                          })}\n                          id=\"state\"\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                        />\n                        {errors.state && (\n                          <p className=\"text-red-500\">{errors.state.message}</p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"sm:col-span-2\">\n                      <label\n                        htmlFor=\"pinCode\"\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\n                      >\n                        ZIP / Postal code\n                      </label>\n                      <div className=\"mt-2\">\n                        <input\n                          type=\"text\"\n                          {...register(\"pinCode\", {\n                            required: \"pinCode is required\",\n                          })}\n                          id=\"pinCode\"\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                        />\n                        {errors.pinCode && (\n                          <p className=\"text-red-500\">\n                            {errors.pinCode.message}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"mt-6 flex items-center justify-end gap-x-6\">\n                  <button\n                    onClick={handleCancel}\n                    type=\"submit\"\n                    className=\"rounded-md px-3 py-2 text-sm font-semibold text-grey shadow-sm hover:bg-grey-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-800\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"rounded-md bg-blue-800 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-blue-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-800\"\n                  >\n                    Add Address\n                  </button>\n                </div>\n              </div>\n            </form>\n          ) : null}\n          {userInfo.addresses.length ? (\n            <p className=\"mt-0.5 text-sm text-gray-500\">Your Addresses :</p>\n          ) : (\n            <h1 className=\"text-center font-bold text-3xl mt-10\">\n              No Address Found\n            </h1>\n          )}\n\n          {userInfo.addresses.map((address, index) => (\n            <div key={index}>\n              {selectedEditIndex === index ? (\n                <form\n                  className=\"bg-white px-5 py-12 mt-12\"\n                  noValidate\n                  onSubmit={handleSubmit((data) => {\n                    handleEdit(data, index);\n                    reset();\n                  })}\n                >\n                  <div className=\"space-y-12\">\n                    <div className=\"border-b border-gray-900/10 pb-12\">\n                      <h2 className=\"text-2xl font-semibold leading-7 text-gray-900\">\n                        Personal Information\n                      </h2>\n                      <p className=\"mt-1 text-sm leading-6 text-gray-600\">\n                        Use a permanent address where you can receive mail.\n                      </p>\n\n                      <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\n                        <div className=\"sm:col-span-4\">\n                          <label\n                            htmlFor=\"name\"\n                            className=\"block text-sm font-medium leading-6 text-gray-900\"\n                          >\n                            Full name\n                          </label>\n                          <div className=\"mt-2\">\n                            <input\n                              type=\"text\"\n                              {...register(\"name\", {\n                                required: \"name is required\",\n                              })}\n                              id=\"name\"\n                              className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                            />\n                            {errors.name && (\n                              <p className=\"text-red-500\">\n                                {errors.name.message}\n                              </p>\n                            )}\n                          </div>\n                        </div>\n\n                        <div className=\"sm:col-span-4\">\n                          <label\n                            htmlFor=\"email\"\n                            className=\"block text-sm font-medium leading-6 text-gray-900\"\n                          >\n                            Email address\n                          </label>\n                          <div className=\"mt-2\">\n                            <input\n                              id=\"email\"\n                              {...register(\"email\", {\n                                required: \"email is required\",\n                              })}\n                              type=\"email\"\n                              className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                            />\n                            {errors.email && (\n                              <p className=\"text-red-500\">\n                                {errors.email.message}\n                              </p>\n                            )}\n                          </div>\n                        </div>\n\n                        <div className=\"sm:col-span-3\">\n                          <label\n                            htmlFor=\"phone\"\n                            className=\"block text-sm font-medium leading-6 text-gray-900\"\n                          >\n                            Phone\n                          </label>\n                          <div className=\"mt-2\">\n                            <input\n                              id=\"phone\"\n                              {...register(\"phone\", {\n                                required: \"phone is required\",\n                              })}\n                              type=\"tel\"\n                              className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                            />\n                            {errors.phone && (\n                              <p className=\"text-red-500\">\n                                {errors.phone.message}\n                              </p>\n                            )}\n                          </div>\n                        </div>\n\n                        <div className=\"col-span-full\">\n                          <label\n                            htmlFor=\"street-address\"\n                            className=\"block text-sm font-medium leading-6 text-gray-900\"\n                          >\n                            Street address\n                          </label>\n                          <div className=\"mt-2\">\n                            <input\n                              type=\"text\"\n                              {...register(\"street\", {\n                                required: \"street is required\",\n                              })}\n                              id=\"street\"\n                              className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                            />\n                            {errors.street && (\n                              <p className=\"text-red-500\">\n                                {errors.street.message}\n                              </p>\n                            )}\n                          </div>\n                        </div>\n\n                        <div className=\"sm:col-span-2 sm:col-start-1\">\n                          <label\n                            htmlFor=\"city\"\n                            className=\"block text-sm font-medium leading-6 text-gray-900\"\n                          >\n                            City\n                          </label>\n                          <div className=\"mt-2\">\n                            <input\n                              type=\"text\"\n                              {...register(\"city\", {\n                                required: \"city is required\",\n                              })}\n                              id=\"city\"\n                              autoComplete=\"address-level2\"\n                              className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                            />\n                            {errors.city && (\n                              <p className=\"text-red-500\">\n                                {errors.city.message}\n                              </p>\n                            )}\n                          </div>\n                        </div>\n\n                        <div className=\"sm:col-span-2\">\n                          <label\n                            htmlFor=\"state\"\n                            className=\"block text-sm font-medium leading-6 text-gray-900\"\n                          >\n                            State / Province\n                          </label>\n                          <div className=\"mt-2\">\n                            <input\n                              type=\"text\"\n                              {...register(\"state\", {\n                                required: \"state is required\",\n                              })}\n                              id=\"state\"\n                              className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                            />\n                            {errors.state && (\n                              <p className=\"text-red-500\">\n                                {errors.state.message}\n                              </p>\n                            )}\n                          </div>\n                        </div>\n\n                        <div className=\"sm:col-span-2\">\n                          <label\n                            htmlFor=\"pinCode\"\n                            className=\"block text-sm font-medium leading-6 text-gray-900\"\n                          >\n                            ZIP / Postal code\n                          </label>\n                          <div className=\"mt-2\">\n                            <input\n                              type=\"text\"\n                              {...register(\"pinCode\", {\n                                required: \"pinCode is required\",\n                              })}\n                              id=\"pinCode\"\n                              className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                            />\n                            {errors.pinCode && (\n                              <p className=\"text-red-500\">\n                                {errors.pinCode.message}\n                              </p>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"mt-6 flex items-center justify-end gap-x-6\">\n                      <button\n                        onClick={(e) => setSelectedEditIndex(-1)}\n                        type=\"submit\"\n                        className=\"rounded-md px-3 py-2 text-sm font-semibold text-grey shadow-sm hover:bg-grey-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-800\"\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        type=\"submit\"\n                        className=\"rounded-md bg-blue-800 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-blue-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-800\"\n                      >\n                        Edit Address\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              ) : null}\n              <div className=\"flex justify-between gap-x-6 px-5 py-5 border-solid border-2 border-gray-200\">\n                <div className=\"flex gap-x-4\">\n                  <div className=\"min-w-0 flex-auto\">\n                    <p className=\"text-sm font-semibold leading-6 text-gray-900\">\n                      {address.name}\n                    </p>\n                    <p className=\"mt-1 truncate text-xs leading-5 text-gray-500\">\n                      {address.street}\n                    </p>\n                    <p className=\"mt-1 truncate text-xs leading-5 text-gray-500\">\n                      {address.pinCode}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"hidden sm:flex sm:flex-col sm:items-end\">\n                  <p className=\"text-sm leading-6 text-gray-900\">\n                    Phone: {address.phone}\n                  </p>\n                  <p className=\"text-sm leading-6 text-gray-500\">\n                    {address.city}\n                  </p>\n                </div>\n                <div className=\"hidden sm:flex sm:flex-col sm:items-end\">\n                  <button\n                    onClick={(e) => handleEditForm(index)}\n                    type=\"button\"\n                    className=\"font-medium text-blue-800 hover:text-blue-700\"\n                  >\n                    Edit\n                  </button>\n                  <button\n                    onClick={(e) => handleRemove(e, index)}\n                    type=\"button\"\n                    className=\"font-medium text-blue-800 hover:text-blue-700\"\n                  >\n                    Remove\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import NavBar from '../features/navbar/Navbar';\nimport UserProfile from '../features/user/components/UserProfile';\n\nfunction UserProfilePage() {\n  return (\n    <div>\n      <NavBar>\n        <h1 className='mx-auto text-2xl'>My Profile</h1>\n        <UserProfile></UserProfile>\n      </NavBar>\n    </div>\n  );\n}\n\nexport default UserProfilePage;"],"names":["UserProfile","dispatch","useDispatch","userInfo","useSelector","selectUserInfo","_useState","useState","_useState2","_slicedToArray","selectedEditIndex","setSelectedEditIndex","_useState3","_useState4","showAddAddressForm","setShowAddAddressForm","_useForm","useForm","register","handleSubmit","reset","setValue","errors","formState","_jsx","children","_jsxs","className","name","email","role","onClick","e","type","noValidate","onSubmit","data","address","newUser","_objectSpread","addresses","concat","_toConsumableArray","updateUserAsync","handleAdd","htmlFor","required","id","message","phone","street","autoComplete","city","state","pinCode","length","map","index","addressUpdate","splice","handleEdit","handleEditForm","handleRemove","NavBar"],"sourceRoot":""}