{"version":3,"file":"static/js/424.d3c75919.chunk.js","mappings":"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","sources":["pages/404.js","features/auth/components/ResetPassword.js","pages/ResetPasswordPage.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\n\nfunction PageNotFound() {\n  return (\n    <main className=\"grid min-h-screen place-items-center bg-white px-6 py-24 sm:py-32 lg:px-8\">\n      <div className=\"text-center\">\n        <p className=\"text-base font-semibold text-blue-800\">404</p>\n        <h1 className=\"mt-4 text-3xl font-bold tracking-tight text-gray-900 sm:text-5xl\">\n          Page not found\n        </h1>\n        <p className=\"mt-6 text-base leading-7 text-gray-600\">\n          Sorry, we couldn't find the page you're looking for.\n        </p>\n        <div className=\"mt-10 flex items-center justify-center gap-x-6\">\n          <Link\n            to=\"/\"\n            className=\"rounded-md bg-custom-gradient px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-blue-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-800\"\n          >\n            Go back home\n          </Link>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default PageNotFound;\n","import { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { resetPasswordAsync, selectPasswordReset } from \"../authSlice\";\r\nimport PageNotFound from \"../../../pages/404\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function ResetPassword() {\r\n  const passwordReset = useSelector(selectPasswordReset);\r\n  const query = new URLSearchParams(window.location.search);\r\n  const [loading, setLoading] = useState(false);\r\n  const token = query.get(\"token\");\r\n  const email = query.get(\"email\");\r\n  \r\n  useEffect(() => {\r\n    if (passwordReset) {\r\n      setLoading(false);\r\n    }\r\n  }, [passwordReset]);\r\n\r\n  const dispatch = useDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  return (\r\n    <>\r\n      {email && token ? (\r\n        <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\r\n          <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\r\n            <img\r\n              className=\"mx-auto h-10 w-auto\"\r\n              src=\"https://tailwindui.com/img/logos/mark.svg?color=blue&shade=600\"\r\n              alt=\"Your Company\"\r\n            />\r\n            <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\r\n              Enter email to reset password\r\n            </h2>\r\n          </div>\r\n\r\n          <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\r\n            <form\r\n              noValidate\r\n              onSubmit={handleSubmit((data) => {\r\n                dispatch(\r\n                  resetPasswordAsync({ token, email, password: data.password })\r\n                );\r\n                setLoading(true);\r\n              })}\r\n              className=\"space-y-6\"\r\n            >\r\n              <div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <label\r\n                    htmlFor=\"password\"\r\n                    className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                  >\r\n                    Password\r\n                  </label>\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                  <input\r\n                    id=\"password\"\r\n                    {...register(\"password\", {\r\n                      required: \"Password is required\",\r\n                      pattern: {\r\n                        value:\r\n                          /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm,\r\n                        message: `- At least 8 characters\\n\r\n                      - Must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number\\n\r\n                      - Can contain special characters`,\r\n                      },\r\n                    })}\r\n                    type=\"password\"\r\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\r\n                  />\r\n                  {errors.password && (\r\n                    <p className=\"text-red-500\">{errors.password.message}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <label\r\n                    htmlFor=\"password\"\r\n                    className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                  >\r\n                    Confirm Password\r\n                  </label>\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                  <input\r\n                    id=\"confirmPassword\"\r\n                    {...register(\"confirmPassword\", {\r\n                      required: \"Confirm password is required\",\r\n                      validate: (value, formValues) =>\r\n                        value === formValues.password ||\r\n                        \"Password not matching\",\r\n                    })}\r\n                    type=\"password\"\r\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <p className=\"text-red-500\">\r\n                      {errors.confirmPassword.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                {passwordReset && (\r\n                  <p className=\"text-green-500\">Password successfully reset.</p>\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`flex w-full justify-center rounded-md ${\r\n                    loading ? \"bg-blue-800/50\" : \"bg-blue-800\"\r\n                  } px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm ${\r\n                    loading ? \"\" : \"hover:bg-blue-700 \"\r\n                  }focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-800`}\r\n                  disabled={loading} // Fixed syntax here\r\n                >\r\n                  {loading ? \"resetting...\" : \"Reset Password\"}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <PageNotFound />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import ResetPassword from \"../features/auth/components/ResetPassword\";\r\n\r\nexport default function ResetPasswordPage() {\r\n  return (\r\n    <div>\r\n      <ResetPassword />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["_jsx","className","children","_jsxs","Link","to","ResetPassword","passwordReset","useSelector","selectPasswordReset","query","URLSearchParams","window","location","search","_useState","useState","_useState2","_slicedToArray","loading","setLoading","token","get","email","useEffect","dispatch","useDispatch","_useForm","useForm","register","handleSubmit","errors","formState","_Fragment","src","alt","noValidate","onSubmit","data","resetPasswordAsync","password","htmlFor","_objectSpread","id","required","pattern","value","message","type","validate","formValues","confirmPassword","concat","disabled","PageNotFound","ResetPasswordPage"],"sourceRoot":""}