{"version":3,"file":"static/js/261.9dffb911.chunk.js","mappings":"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","sources":["app/constants.js","features/user/components/UserOrders.js","pages/UserOrdersPage.js"],"sourcesContent":["export const ITEMS_PER_PAGE = 12;\nexport function discountedPrice(item) {\n  return Math.round(item?.price * (1 - item.discountPercentage / 100), 2);\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  fetchLoggedInUserOrderAsync,\n  selectUserInfoStatus,\n  selectUserOrders,\n} from \"../userSlice\";\nimport { discountedPrice } from \"../../../app/constants\";\nimport { Grid } from \"react-loader-spinner\";\nimport Skeleton from \"react-loading-skeleton\";\n\nexport default function UserOrders() {\n  const dispatch = useDispatch();\n  const orders = useSelector(selectUserOrders);\n  const status = useSelector(selectUserInfoStatus);\n\n  useEffect(() => {\n    dispatch(fetchLoggedInUserOrderAsync());\n  }, [dispatch]);\n\n  const chooseColor = (status) => {\n    switch (status) {\n      case \"pending\":\n        return \"bg-purple-200 text-purple-600\";\n      case \"dispatched\":\n        return \"bg-orange-200 text-orange-600\";\n      case \"delivered\":\n        return \"bg-green-200 text-green-600\";\n      case \"cancelled\":\n        return \"bg-red-200 text-red-600\";\n      default:\n        return \"bg-blue-200 text-blue-800\";\n    }\n  };\n\n  return (\n    <div>\n      {status === \"loading\" ? (\n        <Skeleton height={100} count={3} />\n      ) : (\n        orders &&\n        orders.map((order) => (\n          <div key={order.id}>\n            <div>\n              <div className=\"mx-auto mt-12 bg-white max-w-7xl px-4 sm:px-6 lg:px-8\">\n                <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6\">\n                  <h1 className=\"text-4xl my-5 font-bold tracking-tight text-gray-900\">\n                    Order # {order.id}\n                  </h1>\n                  <h3\n                    className={`text-xl my-5 w-max font-bold tracking-tight ${chooseColor(\n                      order.status\n                    )} px-4 rounded-lg`}\n                  >\n                    Order Status : {order.status}\n                  </h3>\n                  <div className=\"flow-root\">\n                    <ul className=\"-my-6 divide-y divide-gray-200\">\n                      {order.items.map((item) => (\n                        <li key={item.id} className=\"flex py-6\">\n                          <div className=\"h-24 w-24 flex-shrink-0 overflow-hidden rounded-md border border-gray-200\">\n                            <img\n                              src={item.product.thumbnail}\n                              alt={item.product.title}\n                              className=\"h-full w-full object-cover object-center\"\n                            />\n                          </div>\n\n                          <div className=\"ml-4 flex flex-1 flex-col\">\n                            <div>\n                              <div className=\"flex justify-between text-base font-medium text-gray-900\">\n                                <h3>\n                                  <a href={item.product._id}>\n                                    {item.product.title}\n                                  </a>\n                                </h3>\n                                <p className=\"ml-4\">\n                                  Rs.{discountedPrice(item.product)}\n                                </p>\n                              </div>\n                              <p className=\"mt-1 text-sm text-gray-500\">\n                                {item.product.brand}\n                              </p>\n                            </div>{\" \"}\n                            <div className=\"flex justify-between text-sm text-gray-500\">\n                              {item.color && item.color !== \"\" && (\n                                <p className=\"flex items-center my-1\">\n                                  Color:{\" \"}\n                                  <div\n                                    className=\"w-5 h-5 rounded-full relative mx-1\"\n                                    style={{\n                                      backgroundColor: item.color,\n                                    }}\n                                  />\n                                  <span\n                                    style={{\n                                      backgroundColor: `rgba(${parseInt(\n                                        item?.color?.slice(1, 3),\n                                        16\n                                      )}, ${parseInt(\n                                        item?.color?.slice(3, 5),\n                                        16\n                                      )}, ${parseInt(\n                                        item?.color?.slice(5, 7),\n                                        16\n                                      )}, 0.5)`,\n                                      padding: \"2px\",\n                                      borderRadius: \"5px\",\n                                      color: item.color,\n                                    }}\n                                  >\n                                    {item.color}\n                                  </span>\n                                </p>\n                              )}\n                              {item.subcategory && item.subCategory !== \"\" && (\n                                <p>\n                                  {item.product.subTitle}: {item.subCategory}\n                                </p>\n                              )}\n                            </div>\n                            <div className=\"flex flex-1 items-end justify-between text-sm\">\n                              <div className=\"text-gray-500\">\n                                <label\n                                  htmlFor=\"quantity\"\n                                  className=\"inline mr-5 text-sm font-medium leading-6 text-gray-900\"\n                                >\n                                  Qty :{item.quantity}\n                                </label>\n                              </div>\n\n                              <div className=\"flex\"></div>\n                            </div>\n                          </div>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n\n                <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6\">\n                  <div className=\"flex justify-between my-2 text-base font-medium text-gray-900\">\n                    <p>Subtotal</p>\n                    <p>$ {order.totalAmount}</p>\n                  </div>\n                  <div className=\"flex justify-between my-2 text-base font-medium text-gray-900\">\n                    <p>Total Items in Cart</p>\n                    <p>{order.totalItems} items</p>\n                  </div>\n                  <p className=\"mt-0.5 text-sm text-gray-500\">\n                    Shipping Address :\n                  </p>\n                  <div className=\"flex justify-between gap-x-6 px-5 py-5 border-solid border-2 border-gray-200\">\n                    <div className=\"flex gap-x-4\">\n                      <div className=\"min-w-0 flex-auto\">\n                        <p className=\"text-sm font-semibold leading-6 text-gray-900\">\n                          {order.selectedAddress.name}\n                        </p>\n                        <p className=\"mt-1 truncate text-xs leading-5 text-gray-500\">\n                          {order.selectedAddress.street}\n                        </p>\n                        <p className=\"mt-1 truncate text-xs leading-5 text-gray-500\">\n                          {order.selectedAddress.pinCode}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"hidden sm:flex sm:flex-col sm:items-end\">\n                      <p className=\"text-sm leading-6 text-gray-900\">\n                        Phone: {order.selectedAddress.phone}\n                      </p>\n                      <p className=\"text-sm leading-6 text-gray-500\">\n                        {order.selectedAddress.city}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))\n      )}\n      {status === \"loading\" ? (\n        <Grid\n          height=\"80\"\n          width=\"80\"\n          color=\"blue\"\n          ariaLabel=\"grid-loading\"\n          radius=\"12.5\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      ) : null}{\" \"}\n    </div>\n  );\n}\n","import NavBar from '../features/navbar/Navbar';\nimport UserOrders from '../features/user/components/UserOrders';\n\nfunction UserOrdersPage() {\n  return (\n    <div>\n      <NavBar>\n        <h1 className='mx-auto text-2xl'>My Orders</h1>\n        <UserOrders></UserOrders>\n      </NavBar>\n    </div>\n  );\n}\n\nexport default UserOrdersPage;\n"],"names":["ITEMS_PER_PAGE","discountedPrice","item","Math","round","price","discountPercentage","UserOrders","dispatch","useDispatch","orders","useSelector","selectUserOrders","status","selectUserInfoStatus","useEffect","fetchLoggedInUserOrderAsync","chooseColor","_jsxs","children","_jsx","Skeleton","height","count","map","order","className","id","concat","items","_item$color","_item$color2","_item$color3","src","product","thumbnail","alt","title","href","_id","brand","color","style","backgroundColor","parseInt","slice","padding","borderRadius","subcategory","subCategory","subTitle","htmlFor","quantity","totalAmount","totalItems","selectedAddress","name","street","pinCode","phone","city","Grid","width","ariaLabel","radius","wrapperStyle","wrapperClass","visible","NavBar"],"sourceRoot":""}