{"version":3,"file":"static/js/206.f7cc0e17.chunk.js","mappings":"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","sources":["features/admin/components/AdminSliders.js","upload.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"../../navbar/Navbar\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { BounceLoader } from \"react-spinners\";\r\nimport { LuUpload } from \"react-icons/lu\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { uploadCloudinary } from \"../../../upload\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createSlideAsync,\r\n  deleteSlideAsync,\r\n  fetchSlidesAsync,\r\n  selectSlides,\r\n} from \"../../product/productSlice\";\r\n\r\nexport default function AdminSliders() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [hoveredIndex, setHoveredIndex] = useState();\r\n  const dispatch = useDispatch();\r\n  const slides = useSelector(selectSlides);\r\n  const [imagesUrl, setImagesUrl] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSlidesAsync());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (slides.length > 0) {\r\n      const fetchedImages = slides.map((slide) => slide.image);\r\n      setImagesUrl(fetchedImages);\r\n    }\r\n  }, [slides]);\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredIndex(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredIndex(null);\r\n  };\r\n\r\n  async function uploadImages(e) {\r\n    const images = e.target.files;\r\n    if (e.target.files.length > 0) {\r\n      e.preventDefault();\r\n      setLoading(true);\r\n      try {\r\n        let tempArr = [];\r\n        for (let i = 0; i < images.length; i++) {\r\n          const data = await uploadCloudinary(images[i]);\r\n          tempArr.push(data);\r\n        }\r\n\r\n        const updatedImages = tempArr.map((data) => data.url);\r\n        setImagesUrl((prevImages) => [...prevImages, ...updatedImages]);\r\n        setLoading(false);\r\n\r\n        const urlsToSave = tempArr.map((data) => data.url);\r\n        dispatch(createSlideAsync({ images: urlsToSave }));\r\n      } catch (error) {\r\n        alert.error(`Error uploading images: ${error.message}`);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      alert.error(\"No images selected. Please try again.\");\r\n    }\r\n  }\r\n\r\n  const updateImagesOrder = (newOrder) => {\r\n    setImagesUrl([...newOrder]);\r\n  };\r\n\r\n  const handleDeleteImage = async (index) => {\r\n    try {\r\n      const deletedSlideId = slides[index].id;\r\n      await dispatch(deleteSlideAsync(deletedSlideId));\r\n\r\n      // Remove the deleted image from imagesUrl array\r\n      const updatedImagesUrl = [...imagesUrl];\r\n      updatedImagesUrl.splice(index, 1);\r\n      setImagesUrl(updatedImagesUrl);\r\n    } catch (error) {\r\n      alert.error(`Error deleting image: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Navbar>\r\n      <div className=\"bg-white p-4\">\r\n        <div className=\"mt-2 flex gap-2 flex-wrap\">\r\n          <ReactSortable\r\n            list={imagesUrl}\r\n            setList={updateImagesOrder}\r\n            className=\"flex gap-2 flex-wrap\"\r\n          >\r\n            {!!imagesUrl.length &&\r\n              imagesUrl.map((image, index) => {\r\n                return (\r\n                  <div\r\n                    className=\"h-28 relative !cursor-pointer\"\r\n                    key={index}\r\n                    onMouseEnter={() => handleMouseEnter(index)}\r\n                    onMouseLeave={handleMouseLeave}\r\n                  >\r\n                    <img\r\n                      src={image}\r\n                      alt={index}\r\n                      className=\"h-full w-full object-cover transition duration-300 ease-in-out cursor-pointer\"\r\n                    />\r\n                    <div\r\n                      className={`w-full h-full bg-[rgba(0,0,0,0.5)] absolute top-0 left-0 opacity-0 transition-opacity duration-300 ${\r\n                        hoveredIndex === index ? \"opacity-100\" : \"opacity-0\"\r\n                      }`}\r\n                    >\r\n                      <MdDelete\r\n                        className=\"text-red-500 text-3xl absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 \"\r\n                        onClick={() => handleDeleteImage(index)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </ReactSortable>\r\n\r\n          {loading && (\r\n            <div className=\"w-28 h-28 flex items-center justify-center\">\r\n              <BounceLoader color=\"#4F46E5\" />\r\n            </div>\r\n          )}\r\n          <div className=\"w-28 h-28 flex items-center justify-center rounded-lg bg-gray-300 cursor-pointer \">\r\n            <label\r\n              htmlFor=\"images\"\r\n              className=\"flex items-center justify-center rounded-lg bg-gray-300 cursor-pointer gap-2 w-full h-full\"\r\n            >\r\n              <LuUpload className=\"w-6 h-6\" />\r\n              Upload\r\n            </label>\r\n          </div>\r\n          <input\r\n            type=\"file\"\r\n            multiple={true}\r\n            id=\"images\"\r\n            onChange={uploadImages}\r\n            accept=\"image/*\"\r\n            hidden\r\n          />\r\n        </div>\r\n      </div>\r\n    </Navbar>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const uploadCloudinary = async (file) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  formData.append(\"upload_preset\", \"images_presets\");\r\n\r\n  try {\r\n    const { data } = await axios.post(\r\n      \"https://api.cloudinary.com/v1_1/dh6rm1bj6/image/upload\",\r\n      formData\r\n    );\r\n    return { publicId: data?.public_id, url: data?.secure_url };\r\n  } catch (error) {\r\n    console.error(\"Error uploading image:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n"],"names":["AdminSliders","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","hoveredIndex","setHoveredIndex","dispatch","useDispatch","slides","useSelector","selectSlides","_useState5","_useState6","imagesUrl","setImagesUrl","useEffect","fetchSlidesAsync","length","fetchedImages","map","slide","image","handleMouseLeave","_uploadImages","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","e","images","tempArr","i","data","updatedImages","urlsToSave","wrap","_context2","prev","next","target","files","preventDefault","uploadCloudinary","sent","push","url","prevImages","concat","_toConsumableArray","createSlideAsync","t0","alert","error","message","stop","apply","arguments","handleDeleteImage","_ref","_callee","index","deletedSlideId","updatedImagesUrl","_context","id","deleteSlideAsync","splice","_x2","_jsx","Navbar","children","className","_jsxs","ReactSortable","list","setList","newOrder","onMouseEnter","handleMouseEnter","onMouseLeave","src","alt","MdDelete","onClick","BounceLoader","color","htmlFor","LuUpload","type","multiple","onChange","_x","accept","hidden","file","formData","_yield$axios$post","FormData","append","axios","abrupt","publicId","public_id","secure_url","console"],"sourceRoot":""}