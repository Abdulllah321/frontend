{"version":3,"file":"static/js/454.7c301176.chunk.js","mappings":"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","sources":["app/constants.js","pages/Checkout.js"],"sourcesContent":["export const ITEMS_PER_PAGE = 12;\nexport function discountedPrice(item) {\n  return Math.round(item?.price * (1 - item.discountPercentage / 100), 2);\n}\n","import { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  deleteItemFromCartAsync,\n  selectCartLoaded,\n  selectItems,\n  updateCartAsync,\n} from \"../features/cart/cartSlice\";\nimport { Navigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { updateUserAsync } from \"../features/user/userSlice\";\nimport { useState } from \"react\";\nimport {\n  createOrderAsync,\n  selectCurrentOrder,\n} from \"../features/order/orderSlice\";\nimport { selectUserInfo } from \"../features/user/userSlice\";\nimport { discountedPrice } from \"../app/constants\";\nimport { useAlert } from \"react-alert\";\n\nfunction Checkout() {\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const userInfo = useSelector(selectUserInfo);\n  const items = useSelector(selectItems);\n  const currentOrder = useSelector(selectCurrentOrder);\n  const cartLoaded = useSelector(selectCartLoaded);\n  const alert = useAlert();\n  const [additionalMessage, setAdditionalMessage] = useState(\"\");\n  const totalAmount = items.reduce(\n    (amount, item) => discountedPrice(item.product) * item.quantity + amount,\n    0\n  );\n\n  const totalItems = items.reduce((total, item) => item.quantity + total, 0);\n\n  const [selectedAddress, setSelectedAddress] = useState(null);\n  const [paymentMethod, setPaymentMethod] = useState(null);\n\n  const handleQuantity = (e, item) => {\n    dispatch(updateCartAsync({ id: item.id, quantity: +e.target.value }));\n  };\n\n  const handleRemove = (e, id) => {\n    dispatch(deleteItemFromCartAsync(id));\n  };\n\n  const handleAddress = (e) => {\n    // console.log(e.target.value);\n    setSelectedAddress(userInfo?.addresses[e.target.value]);\n  };\n\n  const handlePayment = (e) => {\n    // console.log(e.target.value);\n    setPaymentMethod(e.target.value);\n  };\n\n  const handleOrder = (e) => {\n    if (selectedAddress && paymentMethod) {\n      const order = {\n        items,\n        totalAmount,\n        totalItems,\n        user: userInfo.id,\n        paymentMethod,\n        selectedAddress,\n        additionalMessage,\n        status: \"pending\", \n      };\n\n      dispatch(createOrderAsync(order));\n    } else {\n      // TODO : we can use proper messaging popup here\n      alert.error(\"Enter Address and Payment method\");\n    }\n    //TODO : Redirect to order-success page\n    //TODO : clear cart after order\n    //TODO : on server change the stock number of items\n  };\n\n  return (\n    <>\n      {!items.length && cartLoaded && (\n        <Navigate to=\"/\" replace={true}></Navigate>\n      )}{\" \"}\n      {currentOrder && currentOrder.paymentMethod === \"cash\" && (\n        <Navigate\n          to={`/order-success/${currentOrder.id}`}\n          replace={true}\n        ></Navigate>\n      )}\n      {currentOrder && currentOrder.paymentMethod === \"card\" && (\n        <Navigate to={`/stripe-checkout/`} replace={true}></Navigate>\n      )}\n      <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 gap-x-8 gap-y-10 lg:grid-cols-5\">\n          <div className=\"lg:col-span-3\">\n            {/* This form is for address */}\n            <form\n              className=\"bg-white px-5 py-12 mt-12 shadow-sm\"\n              noValidate\n              onSubmit={handleSubmit((data) => {\n                // console.log(data);\n                dispatch(\n                  updateUserAsync({\n                    ...userInfo,\n                    addresses: [...userInfo?.addresses, data],\n                  })\n                );\n                reset();\n              })}\n            >\n              <div className=\"space-y-12\">\n                <div className=\"border-b border-gray-900/10 pb-12\">\n                  <h2 className=\"text-2xl font-semibold leading-7 text-gray-900\">\n                    Personal Information\n                  </h2>\n                  <p className=\"mt-1 text-sm leading-6 text-gray-600\">\n                    Use a permanent address where you can receive mail.\n                  </p>\n\n                  <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\n                    <div className=\"sm:col-span-4\">\n                      <label\n                        htmlFor=\"name\"\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\n                      >\n                        Full name\n                      </label>\n                      <div className=\"mt-2\">\n                        <input\n                          type=\"text\"\n                          {...register(\"name\", {\n                            required: \"name is required\",\n                          })}\n                          id=\"name\"\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                        />\n                        {errors.name && (\n                          <p className=\"text-red-500\">{errors.name.message}</p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"sm:col-span-4\">\n                      <label\n                        htmlFor=\"email\"\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\n                      >\n                        Email address\n                      </label>\n                      <div className=\"mt-2\">\n                        <input\n                          id=\"email\"\n                          {...register(\"email\", {\n                            required: \"email is required\",\n                          })}\n                          type=\"email\"\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                        />\n                        {errors.email && (\n                          <p className=\"text-red-500\">{errors.email.message}</p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"sm:col-span-3\">\n                      <label\n                        htmlFor=\"phone\"\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\n                      >\n                        Phone\n                      </label>\n                      <div className=\"mt-2\">\n                        <input\n                          id=\"phone\"\n                          {...register(\"phone\", {\n                            required: \"phone is required\",\n                          })}\n                          type=\"tel\"\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                        />\n                        {errors.phone && (\n                          <p className=\"text-red-500\">{errors.phone.message}</p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"col-span-full\">\n                      <label\n                        htmlFor=\"street-address\"\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\n                      >\n                        Street address\n                      </label>\n                      <div className=\"mt-2\">\n                        <input\n                          type=\"text\"\n                          {...register(\"street\", {\n                            required: \"street is required\",\n                          })}\n                          id=\"street\"\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                        />\n                        {errors.street && (\n                          <p className=\"text-red-500\">\n                            {errors.street.message}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"sm:col-span-2 sm:col-start-1\">\n                      <label\n                        htmlFor=\"city\"\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\n                      >\n                        City\n                      </label>\n                      <div className=\"mt-2\">\n                        <input\n                          type=\"text\"\n                          {...register(\"city\", {\n                            required: \"city is required\",\n                          })}\n                          id=\"city\"\n                          autoComplete=\"address-level2\"\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                        />\n                        {errors.city && (\n                          <p className=\"text-red-500\">{errors.city.message}</p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"sm:col-span-2\">\n                      <label\n                        htmlFor=\"state\"\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\n                      >\n                        State / Province\n                      </label>\n                      <div className=\"mt-2\">\n                        <input\n                          type=\"text\"\n                          {...register(\"state\", {\n                            required: \"state is required\",\n                          })}\n                          id=\"state\"\n                          autoComplete=\"address-level1\"\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                        />\n                        {errors.state && (\n                          <p className=\"text-red-500\">{errors.state.message}</p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"sm:col-span-2\">\n                      <label\n                        htmlFor=\"pinCode\"\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\n                      >\n                        ZIP / Postal code\n                      </label>\n                      <div className=\"mt-2\">\n                        <input\n                          type=\"text\"\n                          {...register(\"pinCode\", {\n                            required: \"pinCode is required\",\n                          })}\n                          id=\"pinCode\"\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                        />\n                        {errors.pinCode && (\n                          <p className=\"text-red-500\">\n                            {errors.pinCode.message}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"mt-6 flex items-center justify-end gap-x-6\">\n                  <button\n                    onClick={(e) => reset()}\n                    type=\"button\"\n                    className=\"text-sm font-semibold leading-6 text-gray-900\"\n                  >\n                    Reset\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"rounded-md bg-custom-gradient px-3 py-2 text-sm font-semibold text-white shadow-sm hover:opacity-80 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-800\"\n                  >\n                    Add Address\n                  </button>\n                </div>\n              </div>\n            </form>\n            <div className=\"border-b border-gray-900/10 pb-12\">\n              <div className=\"bg-white px-5 py-12 mt-12 shadow-sm\">\n                <h2 className=\"text-base font-semibold leading-7 text-gray-900\">\n                  Addresses\n                </h2>\n                <p className=\"mt-1 text-sm leading-6 text-gray-600 mb-2\">\n                  Choose from Existing addresses\n                </p>\n                <label htmlFor=\"address\">\n                  <ul>\n                    {userInfo?.addresses.map((address, index) => (\n                      <li\n                        key={index}\n                        className=\"flex justify-between gap-x-6 px-5 py-5 border-solid border-t  border-gray-200 bg-white mt-2\"\n                      >\n                        <div className=\"flex gap-x-4\">\n                          <input\n                            onChange={handleAddress}\n                            name=\"address\"\n                            id=\"address\"\n                            type=\"radio\"\n                            value={index}\n                            className=\"h-4 w-4 border-gray-300 text-blue-800 focus:ring-blue-800 mt-2\"\n                          />\n                          <div className=\"min-w-0 flex-auto\">\n                            <p className=\"text-sm font-semibold leading-6 text-gray-900\">\n                              {address.name}\n                            </p>\n                            <p className=\"mt-1 truncate text-xs leading-5 text-gray-500\">\n                              {address.street}\n                            </p>\n                            <p className=\"mt-1 truncate text-xs leading-5 text-gray-500\">\n                              {address.pinCode}\n                            </p>\n                          </div>\n                        </div>\n                        <div className=\"hidden sm:flex sm:flex-col sm:items-end\">\n                          <p className=\"text-sm leading-6 text-gray-900\">\n                            Phone: {address.phone}\n                          </p>\n                          <p className=\"text-sm leading-6 text-gray-500\">\n                            {address.city}\n                          </p>\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                </label>\n              </div>\n              <div className=\"space-y-10 bg-white px-5 py-12 mt-12 shadow-sm\">\n                <fieldset>\n                  <legend className=\"text-sm font-semibold leading-6 text-gray-900\">\n                    Payment Methods\n                  </legend>\n                  <p className=\"mt-1 text-sm leading-6 text-gray-600\">\n                    Choose One\n                  </p>\n                  <div className=\"mt-6 space-y-6\">\n                    <div className=\"flex items-center gap-x-3\">\n                      <input\n                        id=\"cash\"\n                        name=\"payments\"\n                        onChange={handlePayment}\n                        value=\"cash\"\n                        type=\"radio\"\n                        checked={paymentMethod === \"cash\"}\n                        className=\"h-4 w-4 border-gray-300 text-blue-800 focus:ring-blue-800\"\n                      />\n                      <label\n                        htmlFor=\"cash\"\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\n                      >\n                        Cash on delivery\n                      </label>\n                    </div>\n                    <div\n                      title=\"This option is not available now will be available soon\"\n                      className=\"tooltip-container\"\n                    >\n                      <div className=\"flex items-center gap-x-3 hover:cursor-not-allowed\">\n                        <input\n                          id=\"card\"\n                          onChange={handlePayment}\n                          name=\"payments\"\n                          checked={paymentMethod === \"card\"}\n                          value=\"card\"\n                          type=\"radio\"\n                          disabled\n                          className=\"h-4 w-4 border-gray-300 text-blue-800 focus:ring-blue-800 hover:cursor-not-allowed\"\n                        />\n                        <label\n                          htmlFor=\"card\"\n                          className=\"block text-sm font-medium leading-6 text-gray-600 hover:cursor-not-allowed\"\n                        >\n                          Card Payment\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                </fieldset>\n              </div>\n\n              <div className=\"bg-white px-5 py-12 mt-12 shadow-sm\">\n                <label\n                  htmlFor=\"additional\"\n                  className=\"block text-sm font-medium leading-6 text-gray-900 mb-2 mx-1\"\n                >\n                  Additional Message(optional)\n                </label>\n                <textarea\n                  placeholder=\"Enter your message here\"\n                  id=\"additional\"\n                  rows={4}\n                  onChange={(e) => setAdditionalMessage(e.target.value)}\n                  className=\"block w-full rounded-sm border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                ></textarea>\n              </div>\n            </div>\n          </div>\n          <div className=\"lg:col-span-2\">\n            <div className=\"mx-auto mt-12 bg-white max-w-7xl px-2 sm:px-2 lg:px-4\">\n              <div className=\"border-t border-gray-200 px-0 py-6 sm:px-0\">\n                <h1 className=\"text-4xl my-5 font-bold tracking-tight text-gray-900\">\n                  Cart\n                </h1>\n                <div className=\"flow-root\">\n                  <ul className=\"-my-6 divide-y divide-gray-200\">\n                    {items.map((item) => (\n                      <li key={item.id} className=\"flex py-6\">\n                        <div className=\"h-24 w-24 flex-shrink-0 overflow-hidden rounded-md border border-gray-200\">\n                          <img\n                            src={\n                              item.product.thumbnail\n                                ? item.product.thumbnail\n                                : item.product.images[0]\n                            }\n                            alt={item.product.title}\n                            className=\"h-full w-full object-cover object-center\"\n                          />\n                        </div>\n\n                        <div className=\"ml-4 flex flex-1 flex-col\">\n                          <div>\n                            <div className=\"flex justify-between text-base font-medium text-gray-900\">\n                              <h3>\n                                <a href={item.product._id}>\n                                  {item.product.title}\n                                </a>\n                              </h3>\n                              <p className=\"ml-4\">\n                                Rs.{discountedPrice(item.product)}\n                              </p>\n                            </div>\n                            <p className=\"mt-1 text-sm text-gray-500\">\n                              {item.product.brand}\n                            </p>\n                          </div>\n                          <div className=\"flex justify-between text-sm text-gray-500\">\n                            {item?.color !== undefined && (\n                              <p className=\"flex items-center my-1\">\n                                Color:{\" \"}\n                                <div\n                                  className=\"w-5 h-5 rounded-full relative mx-1\"\n                                  style={{\n                                    backgroundColor: item?.color,\n                                  }}\n                                />\n                                <span\n                                  style={{\n                                    backgroundColor: `rgba(${parseInt(\n                                      item?.color?.slice(1, 3),\n                                      16\n                                    )}, ${parseInt(\n                                      item?.color?.slice(3, 5),\n                                      16\n                                    )}, ${parseInt(\n                                      item?.color?.slice(5, 7),\n                                      16\n                                    )}, 0.5)`,\n                                    padding: \"2px\",\n                                    borderRadius: \"5px\",\n                                    color: item?.color,\n                                  }}\n                                >\n                                  {item?.color}\n                                </span>\n                              </p>\n                            )}\n                            {item.subCategory !== \"\" && (\n                              <p>\n                                {item.product.subTitle}: {item.subCategory}\n                              </p>\n                            )}\n                          </div>\n                          <div className=\"flex flex-1 items-end justify-between text-sm\">\n                            <div className=\"text-gray-500\">\n                              <label\n                                htmlFor=\"quantity\"\n                                className=\"inline mr-5 text-sm font-medium leading-6 text-gray-900\"\n                              >\n                                Qty\n                              </label>\n                              <select\n                                onChange={(e) => handleQuantity(e, item)}\n                                value={item.quantity}\n                              >\n                                {[...Array(item.product.stock).keys()].map(\n                                  (quantity) => (\n                                    <option\n                                      key={quantity + 1}\n                                      value={quantity + 1}\n                                    >\n                                      {quantity + 1}\n                                    </option>\n                                  )\n                                )}\n                              </select>\n                            </div>\n\n                            <div className=\"flex\">\n                              <button\n                                onClick={(e) => handleRemove(e, item.id)}\n                                type=\"button\"\n                                className=\"font-medium text-blue-800 hover:text-blue-700\"\n                              >\n                                Remove\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n\n              <div className=\"border-t border-gray-200 px-2 py-6 sm:px-2\">\n                <div className=\"flex justify-between my-2 text-base font-medium text-gray-900\">\n                  <p>Subtotal</p>\n                  <p>$ {totalAmount}</p>\n                </div>\n                <div className=\"flex justify-between my-2 text-base font-medium text-gray-900\">\n                  <p>Total Items in Cart</p>\n                  <p>{totalItems} items</p>\n                </div>\n                <p className=\"mt-0.5 text-sm text-gray-500\">\n                  Shipping and taxes calculated at checkout.\n                </p>\n                <div className=\"mt-6\">\n                  <div\n                    onClick={handleOrder}\n                    className=\"flex cursor-pointer items-center justify-center rounded-md border border-transparent bg-custom-gradient px-6 py-3 text-base font-medium text-white shadow-sm hover:opacity-80\"\n                  >\n                    Order Now\n                  </div>\n                </div>\n                <div className=\"mt-6 flex justify-center text-center text-sm text-gray-500\">\n                  <p>\n                    or\n                    <Link to=\"/\">\n                      <button\n                        type=\"button\"\n                        className=\"font-medium text-blue-800 hover:text-blue-700 ml-1\"\n                      >\n                        Continue Shopping\n                        <span aria-hidden=\"true\"> &rarr;</span>\n                      </button>\n                    </Link>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Checkout;\n"],"names":["ITEMS_PER_PAGE","discountedPrice","item","Math","round","price","discountPercentage","dispatch","useDispatch","_useForm","useForm","register","handleSubmit","reset","errors","formState","userInfo","useSelector","selectUserInfo","items","selectItems","currentOrder","selectCurrentOrder","cartLoaded","selectCartLoaded","alert","useAlert","_useState","useState","_useState2","_slicedToArray","additionalMessage","setAdditionalMessage","totalAmount","reduce","amount","product","quantity","totalItems","total","_useState3","_useState4","selectedAddress","setSelectedAddress","_useState5","_useState6","paymentMethod","setPaymentMethod","handleAddress","e","addresses","target","value","handlePayment","_jsxs","_Fragment","children","length","_jsx","Navigate","to","replace","concat","id","className","noValidate","onSubmit","data","updateUserAsync","_objectSpread","_toConsumableArray","htmlFor","type","required","name","message","email","phone","street","autoComplete","city","state","pinCode","onClick","map","address","index","onChange","checked","title","disabled","placeholder","rows","_item$color","_item$color2","_item$color3","src","thumbnail","images","alt","href","_id","brand","undefined","color","style","backgroundColor","parseInt","slice","padding","borderRadius","subCategory","subTitle","updateCartAsync","handleQuantity","Array","stock","keys","deleteItemFromCartAsync","order","user","status","createOrderAsync","error","Link"],"sourceRoot":""}